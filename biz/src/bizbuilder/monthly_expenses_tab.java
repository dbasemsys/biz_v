/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bizbuilder;

import java.awt.Color;
import static java.awt.Color.gray;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
/**
 *
 * @author THANATOS
 */
public class monthly_expenses_tab extends javax.swing.JFrame {

    /**
     * Creates new form home_page
     */
    public monthly_expenses_tab() {
        initComponents();
        setMonthlyExpenseDetails();
        met_scr_pane.setVisible(false);
        met_btn_dl.setVisible(false);
        met_save_btn.setVisible(false);
         
        // Combo Box
        populateComboBoxMET();
        setupComboBoxes();
        populatemet_year();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Profile = new rojerusan.RSFotoCircle();
        Employee = new javax.swing.JLabel();
        Dashboard = new javax.swing.JLabel();
        Monthly_Expenses = new javax.swing.JLabel();
        Customer = new javax.swing.JLabel();
        Adding = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        shop_ser_panel = new javax.swing.JPanel();
        txt_price = new javax.swing.JTextField();
        monthly_expenses_lbl = new javax.swing.JLabel();
        lbl_order_ser2 = new javax.swing.JLabel();
        met_btn_dl = new javax.swing.JButton();
        monthly_expenses = new javax.swing.JComboBox<>();
        met_scr_pane = new bizbuilder.Scrollpane();
        jScrollPane1 = new javax.swing.JScrollPane();
        monthly_expenses_table = new javax.swing.JTable();
        met_btn_add = new javax.swing.JButton();
        lbl_order_ser3 = new javax.swing.JLabel();
        met_date = new com.toedter.calendar.JDateChooser();
        met_save_btn = new javax.swing.JButton();
        lbl_shop_ser = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mon_exp_det_db_table = new javax.swing.JTable();
        met_month = new rojerusan.RSComboMetro();
        met_year = new rojerusan.RSComboMetro();
        met_clear_btn = new javax.swing.JButton();
        met_btn_dl1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 650));
        setPreferredSize(new java.awt.Dimension(1300, 650));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        Employee.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Employee.setForeground(new java.awt.Color(255, 255, 255));
        Employee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/employee.png"))); // NOI18N
        Employee.setText("Employee");
        Employee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Employee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmployeeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EmployeeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EmployeeMouseExited(evt);
            }
        });

        Dashboard.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Dashboard.setForeground(new java.awt.Color(255, 255, 255));
        Dashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/dashboard.png"))); // NOI18N
        Dashboard.setText("Dashboard");
        Dashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DashboardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DashboardMouseExited(evt);
            }
        });

        Monthly_Expenses.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Monthly_Expenses.setForeground(new java.awt.Color(255, 255, 255));
        Monthly_Expenses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/expense.png"))); // NOI18N
        Monthly_Expenses.setText("Monthly Expenses");
        Monthly_Expenses.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Monthly_Expenses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Monthly_ExpensesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Monthly_ExpensesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Monthly_ExpensesMouseExited(evt);
            }
        });

        Customer.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Customer.setForeground(new java.awt.Color(255, 255, 255));
        Customer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/user (1).png"))); // NOI18N
        Customer.setText("Customer");
        Customer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CustomerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CustomerMouseExited(evt);
            }
        });

        Adding.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Adding.setForeground(new java.awt.Color(255, 255, 255));
        Adding.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add.png"))); // NOI18N
        Adding.setText("Adding");
        Adding.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Adding.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddingMouseExited(evt);
            }
        });

        Logout.setBackground(new java.awt.Color(102, 102, 255));
        Logout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Logout.setForeground(new java.awt.Color(255, 255, 255));
        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logout.png"))); // NOI18N
        Logout.setText("Logout");
        Logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Adding, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(Customer, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(Employee, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(Dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(Monthly_Expenses, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(Logout)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(Customer)
                .addGap(18, 18, 18)
                .addComponent(Employee)
                .addGap(18, 18, 18)
                .addComponent(Dashboard)
                .addGap(18, 18, 18)
                .addComponent(Monthly_Expenses)
                .addGap(18, 18, 18)
                .addComponent(Adding)
                .addGap(64, 64, 64)
                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(354, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 900));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        shop_ser_panel.setBackground(new java.awt.Color(255, 255, 255));

        txt_price.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_price.setForeground(new java.awt.Color(102, 102, 255));
        txt_price.setText("RS.");
        txt_price.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 255), 1, true));
        txt_price.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_priceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_priceFocusLost(evt);
            }
        });

        monthly_expenses_lbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        monthly_expenses_lbl.setText("Expense");

        lbl_order_ser2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_order_ser2.setText("Price");

        met_btn_dl.setBackground(new java.awt.Color(102, 102, 255));
        met_btn_dl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        met_btn_dl.setForeground(new java.awt.Color(255, 255, 255));
        met_btn_dl.setText("Delete");
        met_btn_dl.setBorderPainted(false);
        met_btn_dl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_btn_dlActionPerformed(evt);
            }
        });

        monthly_expenses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select..." }));
        monthly_expenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthly_expensesActionPerformed(evt);
            }
        });

        monthly_expenses_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expenses", "Price", "Date"
            }
        ));
        monthly_expenses_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthly_expenses_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(monthly_expenses_table);

        met_scr_pane.setViewportView(jScrollPane1);

        met_btn_add.setBackground(new java.awt.Color(102, 102, 255));
        met_btn_add.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        met_btn_add.setForeground(new java.awt.Color(255, 255, 255));
        met_btn_add.setText("Add");
        met_btn_add.setBorderPainted(false);
        met_btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_btn_addActionPerformed(evt);
            }
        });

        lbl_order_ser3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_order_ser3.setText("Date");

        met_date.setBackground(new java.awt.Color(255, 255, 255));
        met_date.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 255), 1, true));
        met_date.setForeground(new java.awt.Color(102, 102, 255));
        met_date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                met_dateFocusGained(evt);
            }
        });

        met_save_btn.setBackground(new java.awt.Color(102, 102, 255));
        met_save_btn.setForeground(new java.awt.Color(255, 255, 255));
        met_save_btn.setText("Save");
        met_save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_save_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout shop_ser_panelLayout = new javax.swing.GroupLayout(shop_ser_panel);
        shop_ser_panel.setLayout(shop_ser_panelLayout);
        shop_ser_panelLayout.setHorizontalGroup(
            shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shop_ser_panelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(shop_ser_panelLayout.createSequentialGroup()
                        .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(monthly_expenses_lbl)
                            .addComponent(monthly_expenses, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_order_ser2)
                            .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_order_ser3)
                            .addComponent(met_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(met_scr_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(met_save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(met_btn_dl, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(met_btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        shop_ser_panelLayout.setVerticalGroup(
            shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shop_ser_panelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthly_expenses_lbl)
                    .addComponent(lbl_order_ser2)
                    .addComponent(lbl_order_ser3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(shop_ser_panelLayout.createSequentialGroup()
                        .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(monthly_expenses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(met_date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(shop_ser_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shop_ser_panelLayout.createSequentialGroup()
                                .addComponent(met_btn_dl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(met_save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(met_scr_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(met_btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        lbl_shop_ser.setBackground(new java.awt.Color(255, 255, 255));
        lbl_shop_ser.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lbl_shop_ser.setForeground(new java.awt.Color(102, 102, 255));
        lbl_shop_ser.setText("Monthly Expenses");
        lbl_shop_ser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbl_shop_ser.setMaximumSize(new java.awt.Dimension(490, 60));
        lbl_shop_ser.setMinimumSize(new java.awt.Dimension(490, 60));
        lbl_shop_ser.setPreferredSize(new java.awt.Dimension(490, 60));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, new java.awt.Color(102, 102, 255)));

        mon_exp_det_db_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Expenses", "Cost", "Date"
            }
        ));
        jScrollPane2.setViewportView(mon_exp_det_db_table);

        met_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select ...", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        met_month.setColorBorde(new java.awt.Color(102, 102, 255));
        met_month.setColorFondo(new java.awt.Color(102, 102, 255));
        met_month.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                met_monthMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                met_monthMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                met_monthMousePressed(evt);
            }
        });
        met_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_monthActionPerformed(evt);
            }
        });

        met_year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select ..." }));
        met_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_yearActionPerformed(evt);
            }
        });

        met_clear_btn.setBackground(new java.awt.Color(102, 102, 255));
        met_clear_btn.setForeground(new java.awt.Color(255, 255, 255));
        met_clear_btn.setText("Clear Filter");
        met_clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_clear_btnActionPerformed(evt);
            }
        });

        met_btn_dl1.setBackground(new java.awt.Color(102, 102, 255));
        met_btn_dl1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        met_btn_dl1.setForeground(new java.awt.Color(255, 255, 255));
        met_btn_dl1.setText("Delete");
        met_btn_dl1.setBorderPainted(false);
        met_btn_dl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                met_btn_dl1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(met_month, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(met_year, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(met_clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(met_btn_dl1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(met_month, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(met_clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(met_year, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(met_btn_dl1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(shop_ser_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_shop_ser, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(166, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lbl_shop_ser, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(shop_ser_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 1000, 650));

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CustomerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerMouseEntered
        // TODO add your handling code here:
        Customer.setBackground(new Color(204,204,255));
        Customer.setOpaque(true);
    }//GEN-LAST:event_CustomerMouseEntered

    private void CustomerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerMouseExited
        // TODO add your handling code here:
        Customer.setBackground(new Color(102,102,255));
        
    }//GEN-LAST:event_CustomerMouseExited

    private void EmployeeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmployeeMouseEntered
        // TODO add your handling code here:
        Employee.setBackground(new Color(204,204,255));
        Employee.setOpaque(true);
    }//GEN-LAST:event_EmployeeMouseEntered

    private void EmployeeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmployeeMouseExited
        // TODO add your handling code here:
        Employee.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_EmployeeMouseExited

    private void DashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardMouseEntered
        // TODO add your handling code here:
        Dashboard.setBackground(new Color(204,204,255));
        Dashboard.setOpaque(true);
    }//GEN-LAST:event_DashboardMouseEntered

    private void DashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardMouseExited
        // TODO add your handling code here:
        Dashboard.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_DashboardMouseExited

    private void Monthly_ExpensesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Monthly_ExpensesMouseEntered
        // TODO add your handling code here:
        Monthly_Expenses.setBackground(new Color(204,204,255));
        Monthly_Expenses.setOpaque(true);
    }//GEN-LAST:event_Monthly_ExpensesMouseEntered

    private void Monthly_ExpensesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Monthly_ExpensesMouseExited
        // TODO add your handling code here:
        Monthly_Expenses.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_Monthly_ExpensesMouseExited

    private void AddingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddingMouseEntered
        // TODO add your handling code here:
        Adding.setBackground(new Color(204,204,255));
        Adding.setOpaque(true);
    }//GEN-LAST:event_AddingMouseEntered

    private void AddingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddingMouseExited
        // TODO add your handling code here:
        Adding.setBackground(new Color(102,102,255));
    }//GEN-LAST:event_AddingMouseExited

    private void CustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerMouseClicked
        // TODO add your handling code here:
        customer_tab o = new customer_tab();
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CustomerMouseClicked

    private void EmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmployeeMouseClicked
        // TODO add your handling code here:
        employee_tab o = new employee_tab();
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_EmployeeMouseClicked

    private void DashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardMouseClicked
        // TODO add your handling code here:
        dashboard o = new dashboard();
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DashboardMouseClicked

    private void Monthly_ExpensesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Monthly_ExpensesMouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_Monthly_ExpensesMouseClicked

    private void AddingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddingMouseClicked
        // TODO add your handling code here:
        adding_tab o = new adding_tab();
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddingMouseClicked

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        signin o = new signin();
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    private void met_btn_dlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_btn_dlActionPerformed
        DefaultTableModel model = (DefaultTableModel) monthly_expenses_table.getModel();
        int rowNo = monthly_expenses_table.getSelectedRow();

        if(rowNo>=0)
        {
            deleteShopSerTable(rowNo);
        }
        if(model.getRowCount()== 0){
           met_scr_pane.setVisible(false);
        met_btn_dl.setVisible(false);
        met_save_btn.setVisible(false);
        }
    }//GEN-LAST:event_met_btn_dlActionPerformed

    private void monthly_expensesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthly_expensesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthly_expensesActionPerformed

    private void monthly_expenses_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthly_expenses_tableMouseClicked

    }//GEN-LAST:event_monthly_expenses_tableMouseClicked

    private void met_btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_btn_addActionPerformed
        DefaultTableModel model = (DefaultTableModel) monthly_expenses_table.getModel();
        validation();
        if(monthly_expenses.getSelectedIndex()!=0 && !txt_price.getText().equals("") && met_date.getDate()!=null && model.getRowCount()== 0){
        met_scr_pane.setVisible(true);
        met_btn_dl.setVisible(true);
        met_save_btn.setVisible(true);
            
        }
        addtoTable();
    }//GEN-LAST:event_met_btn_addActionPerformed

    private void met_save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_save_btnActionPerformed
        // TODO add your handling code here:
        insertmon_exptoDb();
        deleteAllmonexpRecords();
        setMonthlyExpenseDetails();
        met_scr_pane.setVisible(false);
        met_btn_dl.setVisible(false);
        met_save_btn.setVisible(false);
    }//GEN-LAST:event_met_save_btnActionPerformed

    private void txt_priceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_priceFocusGained
        // TODO add your handling code here:
        if(txt_price.getText().equals("RS.")){
            txt_price.setText("");
            txt_price.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_txt_priceFocusGained

    private void txt_priceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_priceFocusLost
        // TODO add your handling code here:
        if(txt_price.getText().equals("")){
            txt_price.setText("RS.");
            txt_price.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_txt_priceFocusLost

    private void met_dateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_met_dateFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_met_dateFocusGained

    private void met_monthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_met_monthMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_met_monthMouseClicked

    private void met_monthMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_met_monthMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_met_monthMouseEntered

    private void met_monthMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_met_monthMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_met_monthMousePressed

    private void met_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_monthActionPerformed

    }//GEN-LAST:event_met_monthActionPerformed

    private void met_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_yearActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_met_yearActionPerformed

    private void met_clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_clear_btnActionPerformed

        
        met_month.setSelectedIndex(0); // Clears the selection
        met_year.setSelectedIndex(0);
    }//GEN-LAST:event_met_clear_btnActionPerformed

    private void met_btn_dl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_met_btn_dl1ActionPerformed
        // TODO add your handling code here:
        deletemetDB();
    }//GEN-LAST:event_met_btn_dl1ActionPerformed
    
    public boolean validation()
    {        

        
        if(monthly_expenses.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(this, "Select Expenses ");
            return false;
        }
        if(txt_price.getText().equals("RS.") )
        {
            JOptionPane.showMessageDialog(this, "Enter Price");
            return false;
        }
        if(met_date.getDate()==null)
        {
            JOptionPane.showMessageDialog(this, "Choose Date");
            return false;
        
        
        
        
       
    }
         return true;
   }
    
         public void addtoTable()
    {
        DefaultTableModel model;
        
        if(monthly_expenses.getSelectedIndex()>=1 && !txt_price.getText().equals(""))
        {
            String mon_exp = monthly_expenses.getSelectedItem().toString();           
            double price = Double.parseDouble(txt_price.getText());
            String date = (met_date.getDate().toString());
            try
            {
                Object[] obj = {mon_exp,price,date};
                model = (DefaultTableModel) monthly_expenses_table.getModel();
                model.addRow(obj);
                
                monthly_expenses.setSelectedIndex(0);
                txt_price.setText("RS.");
                met_date.setDate(null); 
            }
            catch(Exception e)
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error inserting records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }                
    }
         
    public void deleteShopSerTable(int x)
    {
        DefaultTableModel model;        
        int rowNo =x;
        
        try
        {
            model = (DefaultTableModel) monthly_expenses_table.getModel();
            model.removeRow(rowNo);
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error inserting records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }
    
    public void insertmon_exptoDb()
    {
        DefaultTableModel model;
        
        try
        {
            

            model = (DefaultTableModel) monthly_expenses_table.getModel();

            if(model.getRowCount()>0)
            {        
                
                
                Connection con = DBConnection.getConnection();
                String sql = "insert into monthly_expenses (expense,month,cost) values(?,?,?)";
                PreparedStatement pst = con.prepareStatement(sql);

                for(int row=0; row<model.getRowCount();row++)
                {
                    String Expenses = (String) model.getValueAt(row, 0);
                    double price = (Double) model.getValueAt(row, 1);
		    String date = (String) model.getValueAt(row, 2);
                    
                    pst.setDouble(3,price);
                    pst.setString(1,Expenses);   
                    pst.setString(2,date);

                    pst.executeUpdate();
                }
                JOptionPane.showMessageDialog(this, "Records Are Saved");
                
            }     
            else
            {
                JOptionPane.showMessageDialog(this, "Please Add Monthly Expenses to the Table");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error inserting records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }
    
    public void setMonthlyExpenseDetails() {
    DefaultTableModel model = (DefaultTableModel) mon_exp_det_db_table.getModel(); // Initialize the model outside the try-catch block
    model.setRowCount(0);
    try {
        
        Connection con = DBConnection.getConnection();
        
        // Use PreparedStatement to avoid SQL injection and bind the parameter
        String sql = "SELECT * FROM monthly_expenses";
        PreparedStatement pst = con.prepareStatement(sql);
        ResultSet rs = pst.executeQuery(); // Use PreparedStatement's executeQuery method
                    
        while (rs.next()) {
            
            String id,monthly_expenses,cost,date;
            id =rs.getString("expense_id");
            monthly_expenses = rs.getString("expense");
            cost = rs.getString("cost");
            date = rs.getString("month");
            

            Object[] obj = { id,monthly_expenses,cost,date };
            model.addRow(obj);
        }
        
        //con.close(); // Close the connection when done
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error retrieving records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    public void deleteAllmonexpRecords() {
        DefaultTableModel model;

        try {
            model = (DefaultTableModel) monthly_expenses_table.getModel();
            int rowCount = model.getRowCount();

            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void populateComboBoxMET() 
    {
        String sql = "SELECT * FROM monthly_expense_cat";
        try 
        {
            Connection con = DBConnection.getConnection();
            PreparedStatement pst = con.prepareStatement(sql);

            ResultSet rs = pst.executeQuery();
            while (rs.next()) 
            {
                monthly_expenses.addItem(rs.getString("expense"));
            }                
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(this, "Error inserting records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
}

    private void applyFilters(String monthQuery, String yearQuery) {
    DefaultTableModel model = (DefaultTableModel) mon_exp_det_db_table.getModel();
    TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
    mon_exp_det_db_table.setRowSorter(tr);

   
    RowFilter<DefaultTableModel, Object> monthFilter = null;
    RowFilter<DefaultTableModel, Object> yearFilter = null;
    
    if (!"Select ...".equals(yearQuery)) {
        yearFilter = new RowFilter<DefaultTableModel, Object>() {
            @Override
            public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                String dateString = entry.getStringValue(3); // Assuming date is in the third column
                try {
                    // Parse the date using SimpleDateFormat
                    SimpleDateFormat dateFormat = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
                    Date date = dateFormat.parse(dateString);

                    // Extract the year from the parsed date
                    SimpleDateFormat yearFormat = new SimpleDateFormat("yyyy");
                    int year = Integer.parseInt(yearFormat.format(date)); // Convert to integer

                    int filterValue = Integer.parseInt(yearQuery);
                    return year == filterValue; // Compare the extracted year to the yearQuery
                } catch (ParseException | NumberFormatException e) {
                    // Handle parsing and conversion errors here if necessary
                    return false;
                }
            }
        };
    }

	if (!"Select ...".equals(monthQuery)) {
    final String selectedMonth = monthQuery; // Store the selected month

    monthFilter = new RowFilter<DefaultTableModel, Object>() {
        @Override
        public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
            String dateString = entry.getStringValue(3); // Assuming date is in the third column
            try {
                // Parse the date using SimpleDateFormat
                SimpleDateFormat dateFormat = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy", Locale.ENGLISH);
                Date date = dateFormat.parse(dateString);

                // Extract the month from the parsed date
                SimpleDateFormat monthFormat = new SimpleDateFormat("MMMM", Locale.ENGLISH);
                String month = monthFormat.format(date);

                // Compare the extracted month to the selected month
                return month.equalsIgnoreCase(selectedMonth);
            } catch (ParseException e) {
                // Handle parsing errors here if necessary
                return false;
            }
        }
    };
}

    if ( monthFilter != null || yearFilter != null) {
        // Combine filters using RowFilter.andFilter
        List<RowFilter<DefaultTableModel, Object>> filters = new ArrayList<>();
        if (monthFilter != null) filters.add(monthFilter);
        if (yearFilter != null) filters.add(yearFilter);
        
        tr.setRowFilter(RowFilter.andFilter(filters));
    } else {
        // If no filters are applied, show all rows
        tr.setRowFilter(null);
    }
}


private void setupComboBoxes() {
    // Set up ActionListener for emidComboBox
    met_year.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            
            // Get the selected item from monthComboBox
            String monthQuery = met_month.getSelectedItem().toString();

            
            String yearQuery = met_year.getSelectedItem().toString();
            
            // Apply the filters with the selected values from both combo boxes
            applyFilters(monthQuery,yearQuery);
        }
    });
    
    // Set up ActionListener for monthComboBox
    met_month.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            
            // Get the selected item from monthComboBox
            String monthQuery = met_month.getSelectedItem().toString();

            String yearQuery = met_year.getSelectedItem().toString();
            
            // Apply the filters with the selected values from both combo boxes
            applyFilters(monthQuery,yearQuery);
        }
    });
} 

private void populatemet_year(){
    ArrayList<String> values = new ArrayList<>();
    for (int i = 2023; i <= 2123; i++) {
    values.add(""+i);
    }
    for (String value : values) {
    met_year.addItem(value);
    }

    }

public void deletemetDB() {
                
                int selectedRow = mon_exp_det_db_table.getSelectedRow();

                if (selectedRow != -1) { 
                    int metId = Integer.parseInt(mon_exp_det_db_table.getValueAt(selectedRow, 0).toString());

                    try {
                        // Establish a database connection
                        Connection con = DBConnection.getConnection();

                        // Create a DELETE SQL statement
                        String deleteQuery = "DELETE FROM monthly_expenses WHERE expense_id = ?";

                        // Prepare the statement
                        PreparedStatement preparedStatement = con.prepareStatement(deleteQuery);
                        preparedStatement.setInt(1, metId);

                        // Execute the DELETE statement
                        int rowsAffected = preparedStatement.executeUpdate();

                        if (rowsAffected > 0) {
                            // Remove the selected row from the JTable
                            JOptionPane.showMessageDialog(null, "Data deleted from monthly_expenses_table successfully.");
                            DefaultTableModel model = (DefaultTableModel) mon_exp_det_db_table.getModel();
                            model.removeRow(selectedRow);
                        } else {
                            JOptionPane.showMessageDialog(null, "Error deleting the record.", "Error", JOptionPane.ERROR_MESSAGE);
                        }

                        // Close the database connection
                        
                    } catch(Exception e)
                    {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Error inserting records: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }     
                } 
            }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new monthly_expenses_tab().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Adding;
    private javax.swing.JLabel Customer;
    private javax.swing.JLabel Dashboard;
    private javax.swing.JLabel Employee;
    private javax.swing.JButton Logout;
    private javax.swing.JLabel Monthly_Expenses;
    private rojerusan.RSFotoCircle Profile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_order_ser2;
    private javax.swing.JLabel lbl_order_ser3;
    private javax.swing.JLabel lbl_shop_ser;
    private javax.swing.JButton met_btn_add;
    private javax.swing.JButton met_btn_dl;
    private javax.swing.JButton met_btn_dl1;
    private javax.swing.JButton met_clear_btn;
    private com.toedter.calendar.JDateChooser met_date;
    private rojerusan.RSComboMetro met_month;
    private javax.swing.JButton met_save_btn;
    private bizbuilder.Scrollpane met_scr_pane;
    private rojerusan.RSComboMetro met_year;
    private javax.swing.JTable mon_exp_det_db_table;
    private javax.swing.JComboBox<String> monthly_expenses;
    private javax.swing.JLabel monthly_expenses_lbl;
    private javax.swing.JTable monthly_expenses_table;
    private javax.swing.JPanel shop_ser_panel;
    private javax.swing.JTextField txt_price;
    // End of variables declaration//GEN-END:variables
}
